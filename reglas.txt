Quiero que, para cualquier código, explicación o sugerencia que generes sobre este proyecto, sigas estrictamente estas instrucciones:

## Contexto del proyecto:
- Aplicación móvil con Ionic + Angular (versión reciente)
- Es un CRUD de productos con las siguientes vistas: login simulado, bienvenida, dashboard/lista de productos, crear producto, editar producto, detalle de producto y perfil.
- El usuario puede: iniciar sesión (con usuario/contraseña fijo), ver lista de productos, crear, editar, eliminar y ver detalle de productos. Cada producto tiene: nombre, descripción, categoría e imagen.

## Requerimientos técnicos:
- El login es simulado, solo debe mostrar la transición a la pantalla principal si los datos coinciden.
- Todas las funcionalidades deben cumplir con los requerimientos de la prueba técnica (ver abajo).

## Arquitectura y patrones:
- Usa **Feature-based Modular Architecture** con **Service Layer Pattern**.
  - Cada feature (ej: products, auth, profile) debe tener subcarpetas para componentes, servicios, modelos, etc.
  - Toda lógica de negocio y acceso a datos debe ir en servicios centralizados.
  - Usa interfaces y tipos para los datos.
  - Componentes deben ser reutilizables por feature.

## Reglas de legibilidad y nomenclatura:
- Todo en inglés: nombres de variables, funciones, clases, archivos, carpetas y comentarios.
- Nombres claros y descriptivos. No uses abreviaciones confusas ni genéricas.
- Convenciones de nombres:
  - Variables, funciones, atributos: **camelCase**
  - Clases, interfaces, modelos: **PascalCase**
  - Constantes globales: **UPPER_SNAKE_CASE**
  - Archivos y carpetas: **kebab-case**
- Comentarios mínimos, solo para explicar lógica compleja, siempre en inglés.
- No dejes código muerto ni líneas sin uso.

## Formato y estilo:
- Usa siempre Prettier o el formateador de VS Code.
- Mantén la indentación, saltos de línea y formato consistente.
- No dejes líneas largas ni espacios innecesarios.

## Mensajes al usuario:
- Todos los textos y mensajes visibles para el usuario final deben estar en **español**, ser claros, simples y no ambiguos.

## Extras:
- Si sugieres librerías extra, que sean solo complementarias (no reemplazar Ionic ni Angular).
- Si puedes, agrega recomendaciones creativas o mejoras que aporten valor sin salirse del enfoque principal.

### Requerimientos de la prueba técnica (resumidos):
- CRUD completo de productos: crear, listar, editar, eliminar, detalle.
- Login simulado con usuario y contraseña fijo.
- App eficiente, fácil de mantener, código limpio y bien organizado.
- Subir el código a un repositorio público y generar APK.

Antes de dar cualquier código, pregunta si hay dudas sobre algún punto. Si lo tienes todo claro, comienza generando la estructura base del proyecto siguiendo los parámetros anteriores.

---